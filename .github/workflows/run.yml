name: Generate RULE-SET for Premium Edition of Clash
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date '+%Y-%m-%d_%H:%M:%S')" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_ENV

          ### ACL4SSR ###
          echo "ACL4SSR_Clash_ProxyGFWlist=https://github.com/ACL4SSR/ACL4SSR/blob/master/Clash/ProxyGFWlist.list?raw=true" >> $GITHUB_ENV

        shell: bash

      - name: Generate directory
        run: |
          mkdir -p publish/Quantumult-X
          mkdir -p publish/Clash

      - name: Generate acl4ssr-proxy.list for Clash Provider Ruleset
        run: |
          echo "# ACL4SSR Proxy" > ./publish/Clash/acl4ssr-proxy.list
          echo "payload:" >> ./publish/Clash/acl4ssr-proxy.list
          curl -sSL ${ACL4SSR_Clash_ProxyGFWlist} | sed 's/^$/##################################################################/g' | sed 's/,no-resolve//' | sed 's/DOMAIN/  - DOMAIN/g;s/IP/  - IP/' >> ./publish/Clash/acl4ssr-proxy.list

      - name: Generate acl4ssr-proxy.list for Quantumult X
        run: |
          echo "# ACL4SSR Proxy for Quantumult X" > ./publish/Quantumult-X/acl4ssr-proxy.list
          curl -sSL ${ACL4SSR_Clash_ProxyGFWlist} | sed 's/^$/##################################################################/g' | sed 's/$/&, Proxy/g' | sed 's/,no-resolve//' | sed 's/DOMAIN-SUFFIX/HOST-SUFFIX/g;s/DOMAIN-KEYWORD/HOST-KEYWORD/g;s/IP-CIDR6/IP6-CIDR/' | sed 's/#, Proxy//' >> ./publish/Quantumult-X/acl4ssr-proxy.list


      # - name: Release and upload assets
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: ${{ env.RELEASE_NAME }}
      #     tag_name: ${{ env.TAG_NAME }}
      #     draft: false
      #     prerelease: false
      #     files: |
      #       ./publish/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.CLASH_RULES }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.CLASH_RULES }}@github.com/${{ github.repository }}"
          git push -f origin release
