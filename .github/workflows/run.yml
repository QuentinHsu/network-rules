name: Generate RULE-SET for Premium Edition of Clash
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "blackmatrix7_telegram=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml" >> $GITHUB_ENV
        shell: bash

      - name: Generate telegram.txt file
        run: |
          echo "# Telegram" > telegram.txt
          # 正则匹配内容 payload: 并写入 payload:
          curl -sSL ${blackmatrix7_telegram} | perl -ne 'print "payload:" if /payload:/' >> telegram.txt
          # 正则匹配包含   -  的内容 并写入该行所有内容
          curl -sSL ${blackmatrix7_telegram} | perl -ne 'print if /   - /' >> telegram.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.CLASH_RULES }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.CLASH_RULES }}@github.com/${{ github.repository }}"
          git push -f origin release
