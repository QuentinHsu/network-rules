name: Generate RULE-SET for Premium Edition of Clash
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date '+%Y-%m-%d_%H:%M:%S')" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_ENV
          # telegram rules
          echo "blackmatrix7_telegram=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml" >> $GITHUB_ENV
          echo "my_telegram=https://raw.githubusercontent.com/QuentinHsu/Apple-Rules-Script/main/clash/rule/telegram-ip.list" >> $GITHUB_ENV
          echo "acl4ssr_proxyGFWList=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list" >> $GITHUB_ENV
        shell: bash

      - name: Generate telegram.txt file
        run: |
          echo "# Telegram" > telegram.txt
          # 正则匹配内容 'payload:' 并写入该行所有内容
          curl -sSL ${blackmatrix7_telegram} | perl -ne 'print if /payload:/' >> telegram.txt
          # 正则匹配包含'   -  '的内容 并写入该行所有内容
          curl -sSL ${blackmatrix7_telegram} | perl -ne 'print if /\s+-\s+/' >> telegram.txt
          # 写入一行注释：# My Telegram
          echo "# my Telegram" >> telegram.txt
          # 正则匹配包含 'IP-CIDR' 或者 'IP-CIDR6'，若匹配到就写入 '  - ' + 该行除了 ', no-resolve' 之外的内容，且换行
          curl -sSL ${my_telegram} | perl -ne 'print if /IP-CIDR/ or /IP-CIDR6/' | sed 's/, no-resolve//g' | sed 's/^/  - /g' >> telegram.txt

      - name: Generate acl4ssr-proxy.txt file
        run: |
          echo "# ACL4SSR Proxy" > acl4ssr-proxy.txt
          # 写入 'payload:'
          echo "payload:" >> acl4ssr-proxy.txt
          # # 正则匹配包含'# '的内容 并写入该行所有内容
          # curl -sSL ${acl4ssr_proxyGFWList} | perl -ne 'print if /# /' >> acl4ssr-proxy.txt
          # 正则匹配不包含 '#' 或者整行是空的，若匹配到就写入 '  - ' + 该行除了 ',no-resolve' 之外的内容，且换行
          curl -sSL ${acl4ssr_proxyGFWList} | perl -ne 'print if !/^#/ and !/^$/' | sed 's/, no-resolve//g' | sed 's/^/  - /g' >> acl4ssr-proxy.txt


      - name: Generate acl4ssr-proxy-note.txt file
        run: |
          echo "# ACL4SSR Proxy" > acl4ssr-proxy-note.txt
          # 写入 'payload:'
          echo "payload:" >> acl4ssr-proxy-note.txt
          # # 正则匹配包含 '#' 或者整行空行，就写所有内容
          # # 若匹配其他的情况到就写入 '  - ' + 该行除了 ',no-resolve' 之外的内容，且换行
          curl -sSL ${acl4ssr_proxyGFWList} | perl -ne 'print if /^#/ or /^$/' | sed 's/, no-resolve//g' | sed 's/^/  - /g' >> acl4ssr-proxy-note.txt

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          cp *.txt ./publish/

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.CLASH_RULES }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.CLASH_RULES }}@github.com/${{ github.repository }}"
          git push -f origin release
