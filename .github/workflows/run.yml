name: Generate RULE-SET for Premium Edition of Clash
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Get Current Date
        id: date
        run: |
          echo "::set-output name=date::$(TZ=UTC-8 date +%Y-%m-%d" "%H:%M:%S)"

      - name: Set variables
        run: |
          echo "CURRENT_TIME=$(TZ=UTC-8 date +%Y-%m-%d" "%H:%M:%S)" >> $GITHUB_ENV
          echo "RELEASE_NAME=Released on $(TZ=UTC-8 date +%Y-%m-%d" "%H:%M:%S)" >> $GITHUB_ENV
          echo "UPDATED_INFO=Updated: $(TZ=UTC-8 date +%Y-%m-%d" "%H:%M:%S) by ${{ github.actor }}" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_ENV

          ### ACL4SSR ###
          echo "ACL4SSR_Clash_ProxyGFWlist=https://github.com/ACL4SSR/ACL4SSR/blob/master/Clash/ProxyGFWlist.list" >> $GITHUB_ENV

          ### DivineEngine ###
          echo "DivineEngine_Surge_Privacy=https://github.com/DivineEngine/Profiles/blob/master/Surge/Ruleset/Guard/Privacy.list" >> $GITHUB_ENV
          echo "DivineEngine_Surge_Advertising=https://github.com/DivineEngine/Profiles/blob/master/Surge/Ruleset/Guard/Advertising.list" >> $GITHUB_ENV



      - name: Generate directory
        run: |
          mkdir -p publish/Quantumult-X
          mkdir -p publish/Clash

      - name: Generate ACL4SSR-Proxy.yaml for Clash Provider Rule
        env:
          rule_source_url_raw: "${{ env.ACL4SSR_Clash_ProxyGFWlist }}?raw=true"
        run: |
          echo "# ACL4SSR Proxy for Clash Provider Ruleset" > ./publish/Clash/ACL4SSR-Proxy.yaml
          echo "# Rule Source: ${{ env.ACL4SSR_Clash_ProxyGFWlist }}" >> ./publish/Clash/ACL4SSR-Proxy.yaml
          echo "# ${{ env.UPDATED_INFO }}" >> ./publish/Clash/ACL4SSR-Proxy.yaml
          echo "payload:" >> ./publish/Clash/ACL4SSR-Proxy.yaml
          curl -sSL ${{env.rule_source_url_raw}} | sed 's/^$/##################################################################/g' | sed 's/,no-resolve//' | sed 's/DOMAIN/  - DOMAIN/g;s/IP/  - IP/' >> ./publish/Clash/ACL4SSR-Proxy.yaml

      - name: Generate DivineEngine-Privacy.yaml for Clash Provider Rule
        env:
          rule_source_url_raw: "${{ env.DivineEngine_Surge_Privacy }}?raw=true"
        run: |
          echo "# DivineEngine Privacy for Clash Provider Ruleset" > ./publish/Clash/DivineEngine-Privacy.yaml
          echo "# Rule Source: ${{ env.DivineEngine_Surge_Privacy }}" >> ./publish/Clash/DivineEngine-Privacy.yaml
          echo "# ${{ env.UPDATED_INFO }}" >> ./publish/Clash/DivineEngine-Privacy.yaml
          echo "payload:" >> ./publish/Clash/DivineEngine-Privacy.yaml
          curl -sSL ${{env.rule_source_url_raw}} | sed 's/^$/##################################################################/g' | sed 's/,no-resolve//' | sed 's/DOMAIN/  - DOMAIN/g;s/IP/  - IP/' >> ./publish/Clash/DivineEngine-Privacy.yaml

      - name: Generate DivineEngine-AD.yaml for Clash Provider Rule
        env:
          rule_source_url_raw: "${{ env.DivineEngine_Surge_Advertising }}?raw=true"
        run: |
          echo "# DivineEngine AD for Clash Provider Ruleset" > ./publish/Clash/DivineEngine-AD.yaml
          echo "# Rule Source: ${{ env.DivineEngine_Surge_Advertising }}" >> ./publish/Clash/DivineEngine-AD.yaml
          echo "# ${{ env.UPDATED_INFO }}" >> ./publish/Clash/DivineEngine-AD.yaml
          echo "payload:" >> ./publish/Clash/DivineEngine-AD.yaml
          curl -sSL ${{env.rule_source_url_raw}} | sed 's/^$/##################################################################/g' | sed 's/,no-resolve//' | sed 's/DOMAIN/  - DOMAIN/g;s/IP/  - IP/' >> ./publish/Clash/DivineEngine-AD.yaml

      - name: Generate ACL4SSR-Proxy.list for Quantumult X
        env:
          rule_source_url_raw: "${{ env.ACL4SSR_Clash_ProxyGFWlist }}?raw=true"
        run: |
          echo "# ACL4SSR Proxy for Quantumult X" > ./publish/Quantumult-X/ACL4SSR-Proxy.list
          echo "# Rule Source: ${{ env.ACL4SSR_Clash_ProxyGFWlist }}" >> ./publish/Quantumult-X/ACL4SSR-Proxy.list
          echo "# ${{ env.UPDATED_INFO }}" >> ./publish/Quantumult-X/ACL4SSR-Proxy.list
          curl -sSL ${{env.rule_source_url_raw}} | sed 's/^$/##################################################################/g' | sed 's/$/&, Proxy/g' | sed 's/,no-resolve//' | sed 's/DOMAIN-SUFFIX/HOST-SUFFIX/g;s/DOMAIN-KEYWORD/HOST-KEYWORD/g;s/IP-CIDR6/IP6-CIDR/' | sed 's/#, Proxy//' >> ./publish/Quantumult-X/ACL4SSR-Proxy.list


      # - name: Release and upload assets
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: ${{ env.RELEASE_NAME }}
      #     tag_name: ${{ env.TAG_NAME }}
      #     draft: false
      #     prerelease: false
      #     files: |
      #       ./publish/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.CLASH_RULES }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.UPDATED_INFO }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.CLASH_RULES }}@github.com/${{ github.repository }}"
          git push -f origin release
